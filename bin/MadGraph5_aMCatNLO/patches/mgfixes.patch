diff -ur orig/MG5_aMC_v2_2_1/madgraph/various/cluster.py MG5_aMC_v2_2_1/madgraph/various/cluster.py
--- orig/MG5_aMC_v2_2_1/madgraph/various/cluster.py     2014-09-25 16:56:11.000000000 +0200
+++ MG5_aMC_v2_2_1/madgraph/various/cluster.py  2014-10-05 18:14:52.000000000 +0200
@@ -213,8 +213,8 @@
             old_mode = mode
             nb_iter += 1
             idle, run, finish, fail = self.control(me_dir)
-            if fail:
-                raise ClusterManagmentError('Some Jobs are in a Hold/... state. Please try to investigate or contact the IT team')
+            #if fail:
+                #raise ClusterManagmentError('Some Jobs are in a Hold/... state. Please try to investigate or contact the IT team')
             if idle + run == 0:
                 #time.sleep(20) #security to ensure that the file are really written on the disk
                 logger.info('All jobs finished')
@@ -1303,6 +1303,8 @@
             pass
         if log is None:
             log = '/dev/null'
+
+        text += 'if [ -n $CMSSW_BASE ]; then cd $CMSSW_BASE; eval `scramv1 runtime -sh`; cd -; fi;'
         
         text += prog
         if argument:
diff -ur old/MG5_aMC_v2_2_1/Template/LO/bin/internal/Gridpack/run.sh ./MG5_aMC_v2_2_1/Template/LO/bin/internal/Gridpack/run.sh
--- old/MG5_aMC_v2_2_1/Template/LO/bin/internal/Gridpack/run.sh 2014-09-25 16:56:11.000000000 +0200
+++ ./MG5_aMC_v2_2_1/Template/LO/bin/internal/Gridpack/run.sh   2014-09-26 02:14:50.115432890 +0200
@@ -78,37 +78,5 @@
     cd ..
 fi
 
-if [[ -e ./DECAY/decay ]]; then
-    cd DECAY
-    echo -$seed > iseed.dat
-    for ((i = 1 ;  i <= 20;  i++)) ; do
-       if [[ -e decay_$i\.in ]]; then
-           echo "Decaying events..."
-           mv ../events.lhe ../events_in.lhe
-           ./decay < decay_$i\.in
-       fi
-    done
-    cd ..
-fi
-
-if [[ -e ./REPLACE/replace.pl ]]; then
-    for ((i = 1 ;  i <= 20;  i++)) ; do
-       if [[ -e ./REPLACE/replace_card$i\.dat ]];then
-           echo "Adding flavors..."
-           mv ./events.lhe ./events_in.lhe
-           cd ./REPLACE
-           ./replace.pl ../events_in.lhe ../events.lhe < replace_card$i\.dat
-           cd ..
-       fi
-    done
-fi
-
-# part added by Stephen Mrenna to correct the kinematics of the replaced
-#  particles
-if [[ -e ./madevent/bin/internal/addmasses.py ]]; then
-  mv ./events.lhe ./events.lhe.0
-  python ./madevent/bin/internal/addmasses.py ./events.lhe.0 ./events.lhe
-fi  
-
 gzip -f events.lhe
 exit
diff -ur orig/MG5_aMC_v2_2_1/MadSpin/decay.py MG5_aMC_v2_2_1/MadSpin/decay.py
--- orig/MG5_aMC_v2_2_1/MadSpin/decay.py        2014-09-25 16:56:11.000000000 +0200
+++ MG5_aMC_v2_2_1/MadSpin/decay.py     2014-10-02 18:28:47.000000000 +0200
@@ -2160,10 +2160,11 @@
                 stdin_text+=p_str
                 # here I also need to specify the Monte Carlo Masses
                 stdin_text+=" %s \n" % nb_mc_masses
+                                 
+                decay = self.all_ME[production_tag]['decays'][0]
+                decay_me=self.all_ME.get_decay_from_tag(production_tag, decay['decay_tag'])
+                mepath = decay_me['path']
                 
-                mepath = self.all_ME[production_tag]['path']
-                mepath = mepath.replace('production_me','full_me');
-                                
                 trial_nb, BWvalue, weight, momenta, failed, use_mc_masses, helicities = self.loadfortran( 'unweighting', mepath, stdin_text)
                                 
                 self.reset_helicityonly_in_prod_event(event_map, helicities)
diff -ur orig/MG5_aMC_v2_2_1/madgraph/interface/madevent_interface.py MG5_aMC_v2_2_1/madgraph/interface/madevent_interface.py
--- orig/MG5_aMC_v2_2_1/madgraph/interface/madevent_interface.py        2014-09-25 16:56:11.000000000 +0200
+++ MG5_aMC_v2_2_1/madgraph/interface/madevent_interface.py     2014-10-10 10:56:51.000000000 +0200
@@ -34,6 +34,7 @@
 import sys
 import traceback
 import time
+import tempfile
 
 try:
     import readline
@@ -4064,11 +4065,17 @@
             
 
             logfile = pjoin(Pdir, 'gen_ximprove.log')
+
+            procin = tempfile.SpooledTemporaryFile()      
+            procin.write('%s 1 F\n' % (precision))
+            procin.seek(0)
             proc = misc.Popen([pjoin(bindir, 'gen_ximprove')],
-                                    stdin=subprocess.PIPE,
+                                    stdin=procin,
                                     stdout=open(logfile,'w'),
                                     cwd=Pdir)
-            proc.communicate('%s 1 F\n' % (precision))
+            proc.wait()
+            procin.close()
+#            proc.communicate('%s 1 F\n' % (precision))
 
             if os.path.exists(pjoin(Pdir, 'ajob1')):
                 alljobs = glob.glob(pjoin(Pdir,'ajob*'))
